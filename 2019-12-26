1. 解决列表中显示中文问题： json.dumps(list,ensure_ascii=False)
2. 特征提取的方法：
  1) 特征子集选取 信息增益
       选择现有特征
       构造特征 就是特征交叉 可以手动交叉 也可以隐式交叉
       手工特征一般是靠领域知识的，构造完之后也可以算一下和target相关性（皮尔森相关性系数），这个作用可能会削弱本来的其他特征作用
       所以具体结果还是得试一试
       特征交叉是生成新的特征，比如你有性别 学历，交叉后就会有一个新的变量 性别+学历
       隐式交叉的话一般就是用神经网络或者树模型了 FM DeepFM deep cross
  2）跑一个树模型根据特征重要程度排序选
  3）相关性计算  
       和target的相关性，相关性太弱的特征就不要了
       特征之间的相关性
  4）PCA降维（TSNE可以用来展示高维数据）
3. 提取特征和归一化有助于分类效率
4. 网络嵌入方法（Network Embedding）旨在学习网络中节点的低维度潜在表示，所学习到的特征表示可以用作基于图的各种任务的特征
   找到一种映射函数，将网络中的高维节点变成低维表示
   https://www.jiqizhixin.com/articles/2018-08-14-10

5.计数
from collections import Counter
>>> s = "hello pinsily"
>>> d = Counter(s)
>>> d = dict(d)
Counter({'l': 3, 'i': 2, 'h': 1, 'e': 1, 'o': 1, ' ': 1, 'p': 1, 'n': 1, 's': 1, 'y': 1})

6. 作图
import matplotlib.pyplot as plt
plt.plot(x,y)
plt.savefig(...)
plt.show()
没有显示界面的话 plt.switch_backend('agg')

7.求列表均值 import numpy as np   np.mean(list) np.median(list)
8. 工程要点
  模型boosting方法 模型创新不需要，就是特征要做好，参数要调稳，然后多模型协同，线上服务要稳定要快速
  FM Wide&deep
